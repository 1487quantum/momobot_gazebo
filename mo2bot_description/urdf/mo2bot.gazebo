<?xml version="1.0"?>
<robot>

  <!--gazebo reference="left_wheel_hinge">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo>
  <gazebo reference="right_wheel_hinge">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo-->

  <!--colors for gazebo-->
    <gazebo reference="chassis">
      <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="left_wheel">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="right_wheel">
      <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="trolleyW_wheel_front_left">
      <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="trolleyW_holder_front_left">
      <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="trolleyW_wheel_front_right">
      <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="trolleyW_holder_front_right">
      <material>Gazebo/Grey</material>
    </gazebo>
    <!--gazebo reference="caster_left">
      <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="caster_right">
      <material>Gazebo/Grey</material>
    </gazebo-->

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.36</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>10</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>

    </plugin>
  </gazebo>

  <gazebo reference="camera">
    <material>Gazebo/Green</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>mybot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<!-- Depth camera, back-->

  <gazebo reference="dcam_back">
    <material>Gazebo/Grey</material>
    <sensor type="depth" name="dcam_back_gazebo">
      <pose>0 0 0 0 0 0</pose>

      <visualize>true</visualize>

      <update_rate>60.0</update_rate>
      <camera name="head_dcam_back">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>2560</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.5</near>
          <far>20</far>
        </clip>
      </camera>

      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/cameraD/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/cameraD/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/cameraD/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/cameraD/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/cameraD/depth/points</pointCloudTopicName>
          <frameName>dcam_back_depth</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>

    </sensor>
  </gazebo>

  <!-- SICK -->
  <gazebo reference="sick_l">
    <material>Gazebo/Grey</material>
    <sensor type="gpu_ray" name="sick_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle> <!--270 degrees fov-->
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_sick_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/laser/scan</topicName>
        <frameName>sick_l</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!--LCD Display -->
  <gazebo reference="display_screen_link">
    <material>Gazebo/Black</material>

  <visual>
    <plugin name="display_video_controller" filename="libgazebo_ros_video.so">
      <topicName>/lcd_img</topicName>
      <height>1280</height>
      <width>720</width>
    </plugin>
  </visual>
</gazebo>

<!--IMU-->
<gazebo reference="imu_link">
  <material>Gazebo/Blue</material>
   <gravity>true</gravity>
   <sensor name="imu_sensor" type="imu">
     <always_on>true</always_on>
     <update_rate>100</update_rate>
     <visualize>true</visualize>
     <topic>imu_main</topic>
     <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
       <topicName>imu</topicName>
       <bodyName>imu_link</bodyName>
       <updateRateHZ>10.0</updateRateHZ>
       <gaussianNoise>0.0</gaussianNoise>
       <xyzOffset>0 0 0</xyzOffset>
       <rpyOffset>0 0 0</rpyOffset>
       <frameName>imu_link</frameName>
     </plugin>
     <pose>0 0 0 0 0 0</pose>
   </sensor>
 </gazebo>

  <!-- hokuyo -->
  <!--gazebo reference="hokuyo">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type-->
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <!--mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/mybot/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo-->

</robot>
